openapi: 3.0.0
info:
  title: Your Nexus Archive API
  description: |-
    API для мобільного застосунку "Your Nexus Archive" для колекціонерів марок.
    Цей API дозволяє користувачам керувати своєю колекцією, списком бажаних марок та марок для обміну.
    Додано нові адміністративні ендпоінти для керування каталогом марок.
  version: 1.2.0
  license:
    name: Mozilla Public License 2.0 (MPL)
    url: https://www.mozilla.org/en-US/MPL/2.0/
servers:
  - url: http://localhost:4484
    description: Локальний сервер для розробки
tags:
  - name: Auth
    description: Авторизація та аутентифікація користувача
  - name: Stamps
    description: Взаємодія з каталогом марок
  - name: User
    description: Керування даними користувача, колекціями та списками
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      properties:
        name:
          type: string
          example: 'Олександр'
        email:
          type: string
          example: 'oleksandr@example.com'
        password:
          type: string
          format: password
          example: 'Password123'
      required:
        - name
        - email
        - password
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          example: 'oleksandr@example.com'
        password:
          type: string
          format: password
          example: 'Password123'
      required:
        - email
        - password
    User:
      type: object
      properties:
        _id:
          type: string
          example: '66a88b5e9f8a371c646b9a84'
        name:
          type: string
          example: 'Олександр'
        email:
          type: string
          example: 'oleksandr@example.com'
        role:
          type: string
          enum: ['user', 'admin']
          example: 'user'
        collectedStamps:
          type: array
          items:
            type: string
            example: '66a88b5e9f8a371c646b9a85'
        desiredStamps:
          type: array
          items:
            type: string
            example: '66a88b5e9f8a371c646b9a86'
        stampsForExchange:
          type: array
          items:
            type: string
            example: '66a88b5e9f8a371c646b9a87'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    AuthResponse:
      type: object
      properties:
        message:
          type: string
          example: 'Вхід успішний'
        data:
          type: object
          properties:
            accessToken:
              type: string
              example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2YTg4YjVlOWY4YTM3MWM2NDZiOWE4NCIsImlhdCI6MTcyMjM3Mzc5MywiZXhwIjoxNzIyMzc3MzkzfQ.5m8m3R8l5X9q8b8W7n9N1z1m6M3V2d3E4'
            refreshToken:
              type: string
              example: '66a88b5e9f8a371c646b9a84'
            user:
              $ref: '#/components/schemas/User'
    Stamp:
      type: object
      properties:
        _id:
          type: string
          example: '66a88b5e9f8a371c646b9a81'
        stamp_name:
          type: string
          example: 'Перша марка незалежної України'
        description:
          type: string
          example: 'Поштова марка, випущена у 1992 році.'
        country:
          type: string
          example: 'Україна'
        year:
          type: integer
          example: 1992
        price:
          type: number
          format: float
          example: 25.50
        image_url:
          type: string
          format: uri
          example: 'http://localhost:4484/uploads/image.png'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CreateStampRequest:
      type: object
      properties:
        stamp_name:
          type: string
          example: 'Нова українська марка'
        description:
          type: string
          example: 'Опис нової марки.'
        country:
          type: string
          example: 'Україна'
        year:
          type: integer
          example: 2024
        price:
          type: number
          format: float
          example: 50.00
        image_url:
          type: string
          format: uri
          example: 'http://localhost:4484/uploads/new_stamp.png'
      required:
        - stamp_name
        - country
        - year
        - price
    UpdateStampRequest:
      type: object
      properties:
        stamp_name:
          type: string
          example: 'Оновлена українська марка'
        description:
          type: string
          example: 'Оновлений опис нової марки.'
        country:
          type: string
          example: 'Україна'
        year:
          type: integer
          example: 2024
        price:
          type: number
          format: float
          example: 55.00
        image_url:
          type: string
          format: uri
          example: 'http://localhost:4484/uploads/updated_stamp.png'
    StampResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
          example: 'Успішно виконано'
        data:
          $ref: '#/components/schemas/Stamp'
    SuccessResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
          example: 'Успішно виконано'
        data:
          type: object
          description: Дані можуть відрізнятися залежно від запиту
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
          example: 404
        message:
          type: string
          example: 'Не знайдено'
        data:
          type: object
          properties:
            message:
              type: string
              example: 'Ресурс не знайдено.'
    StampArrayResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
          example: 'Успішно виконано'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Stamp'
    ValueResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
          example: 'Успішно виконано'
        data:
          type: object
          properties:
            totalValue:
              type: number
              example: 1500.50
    PercentageResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
          example: 'Успішно виконано'
        data:
          type: object
          properties:
            percentage:
              type: number
              example: 25.43
    PaginationInfo:
      type: object
      properties:
        totalItems:
          type: integer
          description: Загальна кількість елементів
          example: 150
        totalPages:
          type: integer
          description: Загальна кількість сторінок
          example: 15
        currentPage:
          type: integer
          description: Номер поточної сторінки
          example: 1
        perPage:
          type: integer
          description: Кількість елементів на сторінці
          example: 12
    PaginatedStampsResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
          example: 'Успішно виконано'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Stamp'
        pagination:
          $ref: '#/components/schemas/PaginationInfo'
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Зареєструвати нового користувача
      operationId: registerUser
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Успішна реєстрація, повертає дані користувача
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          description: Некоректні дані в запиті. Тіло запиту містить недійсні або відсутні дані.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Користувач з такою електронною поштою вже існує.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/login:
    post:
      tags:
        - Auth
      summary: Вхід користувача
      operationId: loginUser
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Успішний вхід, повертає токени та дані користувача.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Неправильна електронна пошта або пароль.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/logout:
    post:
      tags:
        - Auth
      summary: Вихід користувача
      operationId: logoutUser
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успішний вихід.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Несанкціонований доступ. Користувач не аутентифікований.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /stamps:
    post:
      tags:
        - Stamps
      summary: Створити нову марку (тільки для адміністратора)
      operationId: createStamp
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStampRequest'
      responses:
        '201':
          description: Марку успішно створено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StampResponse'
        '400':
          description: Некоректне тіло запиту.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Несанкціонований доступ. Користувач не аутентифікований.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Заборонено. Тільки адміністратори можуть створювати марки.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Stamps
      summary: Отримати всі марки з пагінацією, сортуванням та фільтрацією
      operationId: getAllStamps
      security: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Номер сторінки
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            default: 12
          description: Кількість елементів на сторінці
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            enum: ['_id', 'stamp_name', 'country', 'year', 'price', 'createdAt']
            default: 'createdAt'
          description: Поле для сортування
        - name: sortOrder
          in: query
          required: false
          schema:
            type: string
            enum: ['asc', 'desc']
            default: 'desc'
          description: Напрямок сортування
        - name: stamp_name
          in: query
          required: false
          schema:
            type: string
          description: Фільтрувати за назвою марки (частковий збіг)
        - name: country
          in: query
          required: false
          schema:
            type: string
          description: Фільтрувати за країною
        - name: year
          in: query
          required: false
          schema:
            type: integer
          description: Фільтрувати за роком випуску
      responses:
        '200':
          description: Список усіх марок з пагінацією.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStampsResponse'
        '404':
          description: Не знайдено жодної марки, що відповідає критеріям.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /stamps/{stampId}:
    put:
      tags:
        - Stamps
      summary: Оновити марку за ID (тільки для адміністратора)
      operationId: updateStampById
      security:
        - bearerAuth: []
      parameters:
        - name: stampId
          in: path
          required: true
          schema:
            type: string
          description: ID марки для оновлення
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStampRequest'
      responses:
        '200':
          description: Марку успішно оновлено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StampResponse'
        '400':
          description: Некоректний формат ID марки або тіло запиту.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Несанкціонований доступ. Користувач не аутентифікований.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Заборонено. Тільки адміністратори можуть оновлювати марки.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Марку не знайдено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Stamps
      summary: Видалити марку за ID (тільки для адміністратора)
      operationId: deleteStampById
      security:
        - bearerAuth: []
      parameters:
        - name: stampId
          in: path
          required: true
          schema:
            type: string
          description: ID марки для видалення
      responses:
        '200':
          description: Марку успішно видалено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Некоректний формат ID марки.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Несанкціонований доступ. Користувач не аутентифікований.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Заборонено. Тільки адміністратори можуть видаляти марки.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Марку не знайдено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Stamps
      summary: Отримати марку за ID
      operationId: getStampById
      security: []
      parameters:
        - name: stampId
          in: path
          required: true
          schema:
            type: string
          description: ID марки для пошуку
      responses:
        '200':
          description: Інформація про марку.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Stamp'
        '400':
          description: Некоректний формат ID марки.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Марку не знайдено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/me/collected-stamps:
    get:
      tags:
        - User
      summary: Отримати колекцію марок поточного користувача з пагінацією та сортуванням
      operationId: getCollectedStamps
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Номер сторінки
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            default: 12
          description: Кількість елементів на сторінці
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            enum: ['_id', 'stamp_name', 'country', 'year', 'price', 'createdAt']
            default: 'createdAt'
          description: Поле для сортування
        - name: sortOrder
          in: query
          required: false
          schema:
            type: string
            enum: ['asc', 'desc']
            default: 'desc'
          description: Напрямок сортування
      responses:
        '200':
          description: Список зібраних марок з пагінацією.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStampsResponse'
        '401':
          description: Несанкціонований доступ. Користувач не аутентифікований.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/me/collected-stamps/value:
    get:
      tags:
        - User
      summary: Отримати загальну вартість колекції користувача
      operationId: getCollectedStampsValue
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Загальна вартість колекції.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValueResponse'
        '401':
          description: Несанкціонований доступ. Користувач не аутентифікований.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/me/collected-stamps/percentage:
    get:
      tags:
        - User
      summary: Отримати відсоток завершення колекції користувача
      operationId: getCollectedStampsPercentage
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Відсоток завершення колекції.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PercentageResponse'
        '401':
          description: Несанкціонований доступ. Користувач не аутентифікований.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/me/collected-stamps/{stampId}:
    post:
      tags:
        - User
      summary: Додати марку до колекції користувача
      operationId: addStampToCollected
      security:
        - bearerAuth: []
      parameters:
        - name: stampId
          in: path
          required: true
          schema:
            type: string
          description: ID марки для додавання
      responses:
        '200':
          description: Марку додано до колекції.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StampArrayResponse'
        '400':
          description: Некоректний формат ID марки.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Несанкціонований доступ. Користувач не аутентифікований.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Марку не знайдено в каталозі.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Марка вже є в колекції.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - User
      summary: Видалити марку з колекції користувача
      operationId: removeStampFromCollected
      security:
        - bearerAuth: []
      parameters:
        - name: stampId
          in: path
          required: true
          schema:
            type: string
          description: ID марки для видалення
      responses:
        '200':
          description: Марку видалено з колекції.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StampArrayResponse'
        '401':
          description: Несанкціонований доступ. Користувач не аутентифікований.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Марку не знайдено в колекції.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/me/desired-stamps:
    get:
      tags:
        - User
      summary: Отримати список бажаних марок поточного користувача з пагінацією та сортуванням
      operationId: getDesiredStamps
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Номер сторінки
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            default: 12
          description: Кількість елементів на сторінці
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            enum: ['_id', 'stamp_name', 'country', 'year', 'price', 'createdAt']
            default: 'createdAt'
          description: Поле для сортування
        - name: sortOrder
          in: query
          required: false
          schema:
            type: string
            enum: ['asc', 'desc']
            default: 'desc'
          description: Напрямок сортування
      responses:
        '200':
          description: Список бажаних марок з пагінацією.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStampsResponse'
        '401':
          description: Несанкціонований доступ. Користувач не аутентифікований.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/me/desired-stamps/{stampId}:
    post:
      tags:
        - User
      summary: Додати марку до списку бажаних
      operationId: addStampToDesired
      security:
        - bearerAuth: []
      parameters:
        - name: stampId
          in: path
          required: true
          schema:
            type: string
          description: ID марки для додавання
      responses:
        '200':
          description: Марку додано до списку бажаних марок.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StampArrayResponse'
        '400':
          description: Некоректний формат ID марки.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Несанкціонований доступ. Користувач не аутентифікований.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Марку не знайдено в каталозі.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Марка вже є у списку бажаних або в колекції.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - User
      summary: Видалити марку зі списку бажаних
      operationId: removeStampFromDesired
      security:
        - bearerAuth: []
      parameters:
        - name: stampId
          in: path
          required: true
          schema:
            type: string
          description: ID марки для видалення
      responses:
        '200':
          description: Марку видалено зі списку бажаних марок.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StampArrayResponse'
        '401':
          description: Несанкціонований доступ. Користувач не аутентифікований.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Марку не знайдено у списку бажаних марок.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/me/exchange-stamps:
    get:
      tags:
        - User
      summary: Отримати список марок поточного користувача для обміну з пагінацією та сортуванням
      operationId: getStampsForExchange
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Номер сторінки
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            default: 12
          description: Кількість елементів на сторінці
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            enum: ['_id', 'stamp_name', 'country', 'year', 'price', 'createdAt']
            default: 'createdAt'
          description: Поле для сортування
        - name: sortOrder
          in: query
          required: false
          schema:
            type: string
            enum: ['asc', 'desc']
            default: 'desc'
          description: Напрямок сортування
      responses:
        '200':
          description: Список марок для обміну з пагінацією.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStampsResponse'
        '401':
          description: Несанкціонований доступ. Користувач не аутентифікований.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/me/exchange-stamps/{stampId}:
    post:
      tags:
        - User
      summary: Додати марку до списку для обміну
      operationId: addStampToExchange
      security:
        - bearerAuth: []
      parameters:
        - name: stampId
          in: path
          required: true
          schema:
            type: string
          description: ID марки для додавання
      responses:
        '200':
          description: Марку додано до списку для обміну.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StampArrayResponse'
        '400':
          description: Некоректний формат ID марки. Марка відсутня в колекції користувача.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Несанкціонований доступ. Користувач не аутентифікований.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Марку не знайдено в каталозі.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Марка вже є у списку для обміну.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - User
      summary: Видалити марку зі списку для обміну
      operationId: removeStampFromExchange
      security:
        - bearerAuth: []
      parameters:
        - name: stampId
          in: path
          required: true
          schema:
            type: string
          description: ID марки для видалення
      responses:
        '200':
          description: Марку видалено зі списку для обміну.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StampArrayResponse'
        '401':
          description: Несанкціонований доступ. Користувач не аутентифікований.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Марку не знайдено у списку для обміну.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
